library(roxygen2)
library(devtools)
install_github("devtools", "hadley")
install_github("devtools", "hadley/devtools")
install_github("devtools", "hadley/devtools/devtools")
load_all()
library(root)
install.packages("root",dep=T)
devtools::load_all(".")
devtools::release()
load_all()
load_all()
library("root")
devtools::create("FcircSEC")
source("https://bioconductor.org/biocLite.R")
biocLite("root")
biocLite("root")
devtools::load_all(".")
library(stringi)
library(stringr)
library("stringr")
library("stringi")
install.packages("stringi")
install.packages("stringi")
library("stringi")
library("stringi")
library(FcircSEC)
a<-data(chr1)
df.fasta<-dataframe2fas(a, file="chromosome1.fa")
library(FcircSEC)
df.fasta<-dataframe2fas(a, file="chromosome1.fa")
class(a)
colnames(a)
a<-chr1
colnames(a)
df.fasta<-dataframe2fas(a, file="chromosome1.fa")
df.fasta<-dataframe2fas(a, file="chromosome1.fasta")
nchar(a[,2])
nchar(as.character(a[,2])
)
fastaFile <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/chr1.fa")
seq_name1 = sub('\\ .*', '', names(fastaFile))
sequence1 = paste(fastaFile)
df <- data.frame(seq_name, sequence)
df <- data.frame(seq_name1, sequence1)
nchar(as.character(df[,2])
)
output_CIRI<-read.delim("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC/data/outpur_CIRI.bed")
output_CIRI<-read.delim("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC/data/output_CIRI.bed")
save(output_CIRI, file="output_CIRI.rda")
circRNA_classb<-read.delim("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.bed")
save(circRNA_classb, file="circRNA_classb.rda")
circRNA_classt<-read.delim("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.txt")
save(circRNA_classt, file="circRNA_classt.rda")
transcript_data<-read.delim("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/transcriptdata.txt")
save(transcript_data, file="transcript_data.rda")
fastaFile <- readDNAStringSet(C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_genomic_sequence.fasta")
fastaFile <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_genomic_sequence.fasta")
seq_name = sub('\\ .*', '', names(fastaFile))
sequence = paste(fastaFile)
df <- data.frame(seq_name, sequence)
save(df, file="circRNA_genomic_sequence.rda")
circ_class_bed<-data("circRNA_classb")
circ_class_bed<-circRNA_classb
head(circ_class_bed)
transcript_data<-data("transcript_data")
transcript_data<-transcript_data
head(transcript_data)
transcript_data1<-data("transcript_data")
transcript_data1<-transcript_data
head(transcript_data1)
circRNA_classb<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.bed")
head(circRNA_classb)
circRNA_classb<-read.delim("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.bed")
head(circRNA_classb)
circRNA_classb<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.bed")
save(circRNA_classb, file="circRNA_classb.rda")
circRNA_classt<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.txt")
head(circRNA_classt)
circ_class_txt<-data("circRNA_classt")
circ_class_txt<-circRNA_classt
head(circ_class_txt)
b_file<-data("output_CIRI")
b_file<-output_CIRI
head(b_file)
annotation_file<-data(refGenchr1)
annotation_file<-refGenchr1
head(annotation_file)
output_CIRI<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI.bed")
head(output_CIRI)
save(output_CIRI, file="output_CIRI.rda")
b_file<-data("output_CIRI")
b_file<-output_CIRI
head(b_file)
write.table(output_CIRI,"C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI1.bed")
read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI1.bed")
A<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI1.bed")
head(A)
write.table(output_CIRI,"C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI1.bed",header=T)
write.table(output_CIRI,"C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI1.bed",col.names=T)
write.table(output_CIRI,"C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI1.bed",col.names=F)
b_file<-data("output_CIRI")
b_file<-output_CIRI
head(b_file)
ref_genom<-data("chr1")
ref_genom<-chr1
dim(ref_genom)
colnames(ref_genom)
df.fasta=dataframe2fas(ref_genom, file="C:/Users/Md. Tofazzal Hossain/Documents/ref_genome.fasta")
install.packages("roxygen2", dep=T)
install.packages("Biostrings", dep=T)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings")
install.packages("seqRFLP", dep=T)
library(FcircSEC)
library(FcircSEC)
install.packages("Rtools", dep=T)
install.Rtools()
library(FcircSEC)
library(FcircSEC)
library(Rtools)
install.packages("devtools", dep=T)
library("devtools")
library("devtools")
library(devtools)
library(roxyzen2)
install.packages(roxyzen2, dep=T)
install.packages("roxyzen2", dep=T)
install.packages("roxygen2", dep=T)
install.packages("roxygen2", dep=T)
install.packages("roxygen2", dep=T)
library(FcircSEC)
library(FcircSEC)
library(FcircSEC)
circ_genomic_seq<-data("circRNA_genomic_sequence")
circ_genomic_seq<-circRNA_genomic_sequence
library(FcircSEC)
circRNA_genomic_sequence
library(FcircSEC)
circ_genomic_seq<-data("circRNA_genomic_sequence")
circRNA_genomic_sequence
circ_genomic_seq=circRNA_genomic_sequence
circ_genomic_seq<-data(circRNA_genomic_sequence)
circ_genomic_seq=circRNA_genomic_sequence
circ_genomic_seq<-circRNA_genomic_sequence
fastaFile1 <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/circRNA_genomic_seq.fasta")
seq_name1 = names(fastaFile1)
sequence1 = paste(fastaFile1)
fasta_file <- data.frame(seq_name1, sequence1)
dim( fasta_file)
head(seq_name1)
save(fasta_file, file="circRNA_genomic_sequence.rda")
getwd()
library(FcircSEC)
circ_genomic_seq<-data(circRNA_genomic_sequence)
circ_genomic_seq<-circRNA_genomic_sequence
circ_genomic_seq<-data(chr1)
circ_genomic_seq<-chr1
fastaFile1 <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/circRNA_genomic_seq.fasta")
seq_name1 = names(fastaFile1)
sequence1 = paste(fastaFile1)
df<- data.frame(seq_name1, sequence1)
dim(df)
nchar(df[1,2])
nchar(as.character(df[1,2])
)
save(df, file="circRNA_genomic_sequence.rda")
prompt(df)
save(df, file="circRNA_genomic_sequence.txt")
library(FcircSEC)
a<-data("circRNA_genomic_sequence")
a
a<-circRNA_genomic_sequence
dim(df)
class(df)
write.table(df, file="genomic_sequence.txt", row.names=F, quote=F, sep="\t")
ge_seq<-read.table("genomic_sequence.txt",header=T)
dim(ge_seq)
ge_seq<-read.delim("genomic_sequence.txt")
save(ge_seq, file="ge_seq.rda")
a<-data(ge_seq)
a<-ge_seq
head(ge_seq)
dim(ge_seq)
fastaFile1 <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/circRNA_genomic_seq.fasta")
seq_name1 = names(fastaFile1)
sequence1 = paste(fastaFile1)
circRNA_genomic_sequence<- data.frame(seq_name1, sequence1)
dim(circRNA_genomic_sequence)
save(circRNA_genomic_sequence,file="circRNA_genomic_sequence.rda")
B<-data(circRNA_genomic_sequence)
B<-circRNA_genomic_sequence
dim(B)
nchar(as.character(B[1,2]))
fastaFile <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/chr1.fa") # reading reference genome
seq_name = sub('\\ .*', '', names(fastaFile))
sequence = paste(fastaFile)
chr1<- data.frame(seq_name, sequence)
save(chr1,file="chr1.rda", compress="xz")
prompt(chr1)
circRNA_classb<- read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.bed", header=F)
head(circRNA_classb)
save(circRNA_classb,file="circRNA_classb", compress="xz")
save(circRNA_classb,file="circRNA_classb.rda", compress="xz")
prompt(circRNA_classb)
circRNA_classt<- read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_class.txt", header=T)
head(circRNA_classt)
save(circRNA_classt,file="circRNA_classt.rda", compress="xz")
prompt(circRNA_classt)
fastaFile1 <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/circRNA_genomic_sequence.fasta") # reading reference genome
seq_name1 = sub('\\ .*', '', names(fastaFile1))
sequence1 = paste(fastaFile1)
circRNA_genomic_sequence<- data.frame(seq_name1, sequence1)
save(circRNA_genomic_sequence, file="circRNA_genomic_sequence.rda", compress = "xz")
prompt(circRNA_genomic_sequence)
output_CIRI<- read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/output_CIRI.bed", header=F)
save(output_CIRI,file="output_CIRI.rda", compress="xz")
prompt(output_CIRI)
refGenchr1<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/refGenchr1.gtf", header = FALSE, sep = '\t')
head(refGenchr1)
save(refGenchr1,file="refGenchr1.rda", compress="xz")
prompt(refGenchr1)
transcript_data<-read.table("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/transcriptdata.txt", header = T)
head(transcript_data)
save(transcript_data,file="transcript_data.rda", compress="xz")
prompt(transcript_data)
fastaFile <- readDNAStringSet("C:/Users/Md. Tofazzal Hossain/Documents/FcircSEC_12222/FcircSEC/Example_data/chr1.fa")
seq_name = sub('\\ .*', '', names(fastaFile))
sequence = paste(fastaFile)
chr1 <- data.frame(seq_name, sequence)
save(chr1,file="chr1.rda", compress="xz")
prompt(chr1)
install.packages("gplots", dep=T)
library("gplots")
data(mtcars)
x  <- as.matrix(mtcars)
hitmap.2(x)
heatmap.2(x)
head(x)
N-count_data<-read.table("D:/Share_Folder/Second_project/CIRI_output/N_transcript_counts_all.txt", row.names = 1)
N_count_data<-read.table("D:/Share_Folder/Second_project/CIRI_output/N_transcript_counts_all.txt", row.names = 1)
head(N_count_data)
dim(N_count_data)
DEcircRNA<-read.table("D:/Share_Folder/Second_project/CIRI_output/DE_limma_fc2_pval_0.05.txt")
head(DEcircRNA)
dim(DEcircRNA)
v=NULL
for(i in 1:dim(DEcircRNA)[1]){
v[i]=which(row.names(N_count_data)==as.character(row.names(DEcircRNA)[i]))
}
length(v)
DEcircRNA_N_count_data<-N_count_data[v,]
head(DEcircRNA_N_count_data)
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
heatmap.2(DEcircRNA_N_count_data)
heatmap.2(DEcircRNA_N_count_data_M)
heatmap.2(t(DEcircRNA_N_count_data_M))
heatmap.2(DEcircRNA_N_count_data_M)
head(x)
head(DEcircRNA_N_count_data_M)
heatmap.2(DEcircRNA_N_count_data_M[1,])
DEcircRNA_N_count_data_M[1,]
heatmap.2(DEcircRNA_N_count_data_M,scale="row")
heatmap.2(DEcircRNA_N_count_data_M,scale="column")
heatmap.2(DEcircRNA_N_count_data_M,scale="row")
N_count_data<-read.table("D:/Share_Folder/Second_project/CIRI_output/transcript_counts_all.txt", row.names = 1)
v=NULL
for(i in 1:dim(DEcircRNA)[1]){
v[i]=which(row.names(N_count_data)==as.character(row.names(DEcircRNA)[i]))
}
DEcircRNA_N_count_data<-N_count_data[v,]
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
heatmap.2(DEcircRNA_N_count_data_M, scale="row")
N_count_data<-read.table("D:/Share_Folder/Second_project/CIRI_output/N_transcript_counts_all.txt", row.names = 1)
v=NULL
for(i in 1:dim(DEcircRNA)[1]){
v[i]=which(row.names(N_count_data)==as.character(row.names(DEcircRNA)[i]))
}
DEcircRNA_N_count_data<-N_count_data[v,]
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
heatmap.2(DEcircRNA_N_count_data_M, scale="row")
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="column")
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="row")
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="none")
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="column")
Data_1<-DEcircRNA_N_count_data_M[1:3,]
head(Data_1)
heatmap.2(Data_1, scale="row", dendrogram="column")
Data_1<-DEcircRNA_N_count_data_M[1:10,]
heatmap.2(Data_1, scale="row", dendrogram="column")
Data_1<-DEcircRNA_N_count_data_M[1:100,]
heatmap.2(Data_1, scale="row", dendrogram="column")
Data_1<-DEcircRNA_N_count_data_M[1:1000,]
heatmap.2(Data_1, scale="row", dendrogram="column")
head(DEcircRNA)
Data_1<-DEcircRNA_N_count_data_M[1:800,]
heatmap.2(Data_1, scale="row", dendrogram="column")
DEcircRNA[1500:2000,]
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="column")
heatmap(DEcircRNA_N_count_data_M, scale="row", dendrogram="column")
heatmap(DEcircRNA_N_count_data_M, scale="row")
heatmap(DEcircRNA_N_count_data_M)
heatmap(DEcircRNA_N_count_data_M, col = cm.colors(256))
heatmap(DEcircRNA_N_count_data_M, col = cm.colors(256),scale="row")
rc <- rainbow(nrow(x), start = 0, end = .3)
cc <- rainbow(ncol(x), start = 0, end = .3)
heatmap(DEcircRNA_N_count_data_M, col = cm.colors(256),scale="row", RowSideColors = rc, ColSideColors = cc, margins = c(5,10))
x  <- as.matrix(mtcars)
hv <- heatmap(x, col = cm.colors(256), scale = "column",
RowSideColors = rc, ColSideColors = cc, margins = c(5,10),
xlab = "specification variables", ylab =  "Car Models",
main = "heatmap(<Mtcars data>, ..., scale = \"column\")")
rc <- rainbow(nrow(DEcircRNA_N_count_data_M), start = 0, end = .3)
cc <- rainbow(ncol(DEcircRNA_N_count_data_M), start = 0, end = .3)
heatmap(DEcircRNA_N_count_data_M, col = cm.colors(256),scale="row", RowSideColors = rc, ColSideColors = cc, margins = c(5,10))
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="column",trace=""row)
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="column",trace="row")
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="column")
mycol<-colorpanel(75, "red","black", "green")
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="both", col=mycolor)
heatmap.2(DEcircRNA_N_count_data_M, scale="row", dendrogram="both", col=mycol)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M)+1
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol)
head(DEcircRNA_N_count_data_M_L)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M+1)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="column", col=mycol)
heatmap.2(DEcircRNA_N_count_data_M_L[1:100], scale="row", dendrogram="column", col=mycol)
heatmap.2(DEcircRNA_N_count_data_M_L[1:100,], scale="row", dendrogram="column", col=mycol)
heatmap.2(DEcircRNA_N_count_data_M_L[1:100,], scale="row", dendrogram="both", col=mycol)
heatmap.2(DEcircRNA_N_count_data_M_L[1:100,], scale="row", dendrogram="both", col=mycol, density.info="none")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", sepcolor="white")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none")
mycol<-colorpanel(256, "red","black", "green")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none")
mycol<-colorpanel(75, "red","black", "green")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labCol = NULL)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",ylab=NA)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL, labCol=NULL)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL, labCol=NULL, margins= c(5,5))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL, labCol=NULL, margins= c(10,10))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL, labCol=NULL, margins= c(2,2))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL, labCol=NULL)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow = NULL, labCol=c(1:18))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow =c(NA), labCol=c(1:18))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow =c(NA),)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow =c(NA))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both", col=mycol, density.info="none", trace="none",labRow =c(NA), reorderfun = function(d, w) reorder(d, w))
B1<-rep(Normal_S, 12)
B1<-rep("Normal_S", 12)
B2<-rep("PCa_S", 18)
ncol<-paste(B1, A1, sep=" ")
A1<-1:12
ncol<-paste(B1, A1, sep=" ")
ncol
ncol<-paste0(B1, A1)
ncol
ccol<-paste0(B2, A2)
A2<-1:18
B2<-rep("PCa_S", 18)
B2
ccol<-paste0(B2, A2)
ccol
colnames(N_count_data)<-c([ncol,ccol)
colnames(N_count_data)<-c(ncol,ccol)
head(N_count_data)
DEcircRNA_N_count_data<-N_count_data[v,]
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M+1)
mycol<-colorpanel(75, "red","black", "green")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(5,5))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(10,5))
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
library(FcircSEC)
library("gplots")
N_count_data<-read.table("D:/Share_Folder/Second_project/CIRI_output/N_transcript_counts_all.txt", row.names = 1)
head(N_count_data)
A1<-1:12
A2<-1:18
B1<-rep("Normal_S", 12)
B2<-rep("PCa_S", 18)
ncol<-paste0(B1, A1)
ccol<-paste0(B2, A2)
colnames(N_count_data)<-c(ncol,ccol)
head(N_count_data)
DEcircRNA<-read.table("D:/Share_Folder/Second_project/CIRI_output/DE_limma_fc2_pval_0.05.txt")
v=NULL
for(i in 1:dim(DEcircRNA)[1]){
v[i]=which(row.names(N_count_data)==as.character(row.names(DEcircRNA)[i]))
}
length(v)
DEcircRNA_N_count_data<-N_count_data[v,]
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M+1)
mycol<-colorpanel(75, "red","black", "green")
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="column", col=mycol)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
library(limma)
library("limma")
library("limma")
fit <- lmFit(N_count_data,design1)
N_count_data<-read.table("D:/Share_Folder/Second_project/CIRI_output/N_transcript_counts_all.txt", row.names = 1)
A1<-1:12
A2<-1:18
B1<-rep("Normal_S", 12)
B2<-rep("PCa_S", 18)
ncol<-paste0(B1, A1)
ccol<-paste0(B2, A2)
colnames(N_count_data)<-c(ncol,ccol)
DEcircRNA<-read.table("D:/Share_Folder/Second_project/CIRI_output/DE_limma_fc2_pval_0.05.txt")
v=NULL
for(i in 1:dim(DEcircRNA)[1]){
v[i]=which(row.names(N_count_data)==as.character(row.names(DEcircRNA)[i]))
}
length(v)
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M+1)
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_150.png", units="px",  res=150, width=1000, height=1000)
DEcircRNA_N_count_data<-N_count_data[v,]
DEcircRNA_N_count_data_M<-as.matrix(DEcircRNA_N_count_data)
DEcircRNA_N_count_data_M_L<-log10(DEcircRNA_N_count_data_M+1)
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_150.png", units="px",  res=150, width=1000, height=1000)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
library("gplots")
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_150.png", units="px",  res=150, width=1000, height=1000)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
mycol<-colorpanel(75, "red","black", "green")
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_150.png", units="px",  res=150, width=1000, height=1000)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
dev.off()
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_300.png", units="px",  res=300, width=1000, height=1000)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
dev.off()
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_300.png", units="px",  res=300, width=2000, height=2000)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
dev.off()
png("D:/SIAT/Manuscript/Prostate_cancer/heatmap_500.png", units="px",  res=500, width=3000, height=3000)
heatmap.2(DEcircRNA_N_count_data_M_L, scale="row", dendrogram="both",
col=mycol, density.info="none", trace="none",labRow =c(NA), margins=c(6,5))
dev.off()
library(FcircSEC)
library(Rtools)
library(Rtools)
library(FcircSEC)
devtools::find_rtools()
Sys.getenv("PATH")
library(FcircSEC)
library(FcircSEC)
devtools::check_win_devel()
devtools::check_win_devel()
devtools::check_win_devel()
devtools::check_win_devel()
devtools::check_win_devel()
install.packages(c("curl", "httr"))
library(FcircSEC)
library(FcircSEC)
usethis::use_release_issue()
use_github()
usethis::use_travis()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue()
usethis::use_release_issue(version=NULL)
Sys.getenv("GITHUB_PAT")
